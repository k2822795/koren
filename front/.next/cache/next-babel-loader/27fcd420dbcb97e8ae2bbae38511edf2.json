{"ast":null,"code":"var _jsxFileName = \"/Users/kkm/dev/koren/front/pages/Write.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport WriteFrom from \"../component/WriteForm\";\nimport Read from \"../component/Read\";\n\nclass Write extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      blockdata: [{\n        name: \"kkm\",\n        hospital: \"korea\",\n        data: \"he is cancer\"\n      }],\n      keyword: \"\"\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      this.setState({\n        keyword: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleCreate\", data => {\n      const {\n        blockdata\n      } = this.state;\n      this.setState({\n        blockdata: blockdata.concat({\n          name: data.name,\n          hospital: data.hospital,\n          data: data.data\n        })\n      });\n    });\n  }\n\n  render() {\n    const {\n      blockdata,\n      keyword\n    } = this.state;\n    const filteredlist = blockdata.filter(data => data.name.indexOf(keyword) !== -1);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, __jsx(WriteFrom, {\n      onCreate: this.handleCreate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), __jsx(Read, {\n      blockdata: filteredlist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      placeholder: \"\\uC774\\uB984 \\uC785\\uB825\",\n      onChange: this.handleChange,\n      value: keyword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Write;","map":{"version":3,"sources":["/Users/kkm/dev/koren/front/pages/Write.js"],"names":["React","Component","WriteFrom","Read","Write","blockdata","name","hospital","data","keyword","e","setState","target","value","state","concat","render","filteredlist","filter","indexOf","handleCreate","handleChange"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;;AAAA,mCACpB;AACNI,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,IAAI,EAAE,KADR;AAEEC,QAAAA,QAAQ,EAAE,OAFZ;AAGEC,QAAAA,IAAI,EAAE;AAHR,OADS,CADL;AAQNC,MAAAA,OAAO,EAAE;AARH,KADoB;;AAAA,0CAWZC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACZF,QAAAA,OAAO,EAAEC,CAAC,CAACE,MAAF,CAASC;AADN,OAAd;AAGD,KAf2B;;AAAA,0CAiBZL,IAAD,IAAU;AACvB,YAAM;AAAEH,QAAAA;AAAF,UAAgB,KAAKS,KAA3B;AACA,WAAKH,QAAL,CAAc;AACZN,QAAAA,SAAS,EAAEA,SAAS,CAACU,MAAV,CAAiB;AAC1BT,UAAAA,IAAI,EAAEE,IAAI,CAACF,IADe;AAE1BC,UAAAA,QAAQ,EAAEC,IAAI,CAACD,QAFW;AAG1BC,UAAAA,IAAI,EAAEA,IAAI,CAACA;AAHe,SAAjB;AADC,OAAd;AAOD,KA1B2B;AAAA;;AA4B5BQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,SAAF;AAAaI,MAAAA;AAAb,QAAyB,KAAKK,KAApC;AACA,UAAMG,YAAY,GAAGZ,SAAS,CAACa,MAAV,CAClBV,IAAD,IAAUA,IAAI,CAACF,IAAL,CAAUa,OAAV,CAAkBV,OAAlB,MAA+B,CAAC,CADvB,CAArB;AAIA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKW,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAEH,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,WAAW,EAAC,2BADd;AAEE,MAAA,QAAQ,EAAE,KAAKI,YAFjB;AAGE,MAAA,KAAK,EAAEZ,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,CADF;AAaD;;AA/C2B;;AAkD9B,eAAeL,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport WriteFrom from \"../component/WriteForm\";\nimport Read from \"../component/Read\";\n\nclass Write extends Component {\n  state = {\n    blockdata: [\n      {\n        name: \"kkm\",\n        hospital: \"korea\",\n        data: \"he is cancer\",\n      },\n    ],\n    keyword: \"\",\n  };\n  handleChange = (e) => {\n    this.setState({\n      keyword: e.target.value,\n    });\n  };\n\n  handleCreate = (data) => {\n    const { blockdata } = this.state;\n    this.setState({\n      blockdata: blockdata.concat({\n        name: data.name,\n        hospital: data.hospital,\n        data: data.data,\n      }),\n    });\n  };\n\n  render() {\n    const { blockdata, keyword } = this.state;\n    const filteredlist = blockdata.filter(\n      (data) => data.name.indexOf(keyword) !== -1\n    );\n\n    return (\n      <div>\n        <WriteFrom onCreate={this.handleCreate} />\n        <Read blockdata={filteredlist} />\n        <p>\n          <input\n            placeholder=\"이름 입력\"\n            onChange={this.handleChange}\n            value={keyword}\n          />\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Write;\n"]},"metadata":{},"sourceType":"module"}