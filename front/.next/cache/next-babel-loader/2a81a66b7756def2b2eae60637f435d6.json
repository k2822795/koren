{"ast":null,"code":"var _jsxFileName = \"/Users/kkm/dev/koren/front/component/Read.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport ReadData from './ReadData';\n\nclass Read extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.data !== this.props.data;\n  }\n\n  render() {\n    const {\n      blockdata\n    } = this.props;\n    const list = blockdata.map(data => __jsx(ReadData, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 22\n      }\n    }));\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, list);\n  }\n\n}\n\n_defineProperty(Read, \"defaultProps\", {\n  blockdata: []\n});\n\nexport default Read;","map":{"version":3,"sources":["/Users/kkm/dev/koren/front/component/Read.js"],"names":["React","Component","ReadData","Read","shouldComponentUpdate","nextProps","nextState","data","props","render","blockdata","list","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAKzBG,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,WAAOD,SAAS,CAACE,IAAV,KAAmB,KAAKC,KAAL,CAAWD,IAArC;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKF,KAA3B;AACA,UAAMG,IAAI,GAAGD,SAAS,CAACE,GAAV,CACTL,IAAI,IAAK,MAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAAb;AAIA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKI,IADL,CADJ;AAKH;;AApBwB;;gBAAvBR,I,kBACoB;AAClBO,EAAAA,SAAS,EAAE;AADO,C;;AAuB1B,eAAeP,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReadData from './ReadData';\n\nclass Read extends Component {\n    static defaultProps = {\n        blockdata: []\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.data !== this.props.data;\n    }\n\n    render() {\n        const { blockdata } = this.props;\n        const list = blockdata.map(\n            data => (<ReadData data={data}/>)\n        );\n\n        return (\n            <div>\n                {list}\n            </div>\n        )\n    }\n\n}\n\nexport default Read;"]},"metadata":{},"sourceType":"module"}